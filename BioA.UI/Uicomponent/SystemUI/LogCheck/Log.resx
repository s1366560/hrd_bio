<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>